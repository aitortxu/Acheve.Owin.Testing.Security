using System.Web.Http;
using IdentityServer3.AccessTokenValidation;
using IdentityServer3.Core.Configuration;
using Microsoft.Owin;
using Owin;
using Sample.Host.IdSrvConfig;

[assembly: OwinStartup(typeof(Sample.Host.Startup))]

namespace Sample.Host
{
    public class Startup
    {
        public void Configuration(IAppBuilder app)
        {
            app.Map("/auth", auth =>
            {
                // In this sample we are going to use Identity Server as our Security Token Service
                var idsrvOptions = new IdentityServerOptions
                {
                    Factory = new IdentityServerServiceFactory()
                    .UseInMemoryUsers(Users.Get())
                    .UseInMemoryClients(Clients.Get())
                    .UseInMemoryScopes(Scopes.Get()),

                    SigningCertificate = Cert.Load(),

                    RequireSsl = false
                };

                auth.UseIdentityServer(idsrvOptions);
            });

            app.Map("/api", api =>
            {
                // Authenticate the api request with tokens generated by Identity Server
                api.UseIdentityServerBearerTokenAuthentication(new IdentityServerBearerTokenAuthenticationOptions
                {
                    Authority = "http://localhost:6549/auth",
                    ValidationMode = ValidationMode.ValidationEndpoint,
                    RequiredScopes = new[] { "api" },
                });

                var config = new HttpConfiguration();
                Sample.Api.WebApiConfiguration.Configure(config);
                api.UseWebApi(config);
            });

            // Default page
            app.Run(async context =>
            {
                await context.Response.WriteAsync("The api is exposed in /api/values");
            });
        }
    }
}
